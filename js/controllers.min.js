/*! App ARPAV Aria - v1.0.0 - 2013-09-07
* arpa.veneto.it
* Copyright (c) 2013 Daniele Lain - <daniele_lain@libero.it>;
	This program is free software: you can redistribute it and/or modify 
	it under the terms of the GNU General Public License as published by 
	the Free Software Foundation, either version 3 of the License, or 
	(at your option) any later version. 
 
	This program is distributed in the hope that it will be useful, 
	but WITHOUT ANY WARRANTY; without even the implied warranty of 
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
	GNU General Public License for more details. 
  
	You should have received a copy of the GNU General Public License 
	along with this program.  If not, see <http://www.gnu.org/licenses/>. */
var AppController=Backbone.Model.extend({start:function(){AA.modalHelper=new ModalHelper,AA.modalHelper.showLoading(),AA.dataProvider=new DataProvider,AA.dataParser=new DataParser,AA.dataParser.parseAll(AA.dataProvider),AA.app=new Backbone.Marionette.Application,AA.app.addRegions({navRegion:"#topnav",contentRegion:"#content"}),AA.app.contentRegion.on("show",function(){window.scrollTo(0,0)}),AA.storage=window.localStorage,AA.settings=new Settings,AA.geoHelper=new GeoHelper,AA.geoHelper.geoLocalize(1),AA.mapHelper=new MapHelper,AA.router=new AriaRouter,Backbone.history.start({pushState:!0,hashChange:!1,root:"/arpav/"}),this.index()},printHead:function(a,b,c,d){a=a?a:{show:0,icon:"",id:"",text:""},c=c?c:{show:0,icon:"",id:"",text:""};var e=new Page({left_show:a.show?a.show:0,left_icon:a.icon?a.icon:"",left_id:a.id?a.id:"",left_text:a.text?a.text:"",center:b?b:"",right_show:c.show?c.show:0,right_icon:c.icon?c.icon:"",right_id:c.id?c.id:"",right_text:c.text?c.text:"",logo_show:d?d:0}),f=new TopView({model:e});return AA.app.navRegion.show(f),f},map:function(){if("undefined"!=typeof navigator.connection)if(navigator.connection.type!==Connection.NONE){var a=new MapView;AA.app.contentRegion.show(a),this.openStreetMap(),this.centralineMarker(),this.userMarker()}else AA.modalHelper.showError(1);else{var b=new MapView;AA.app.contentRegion.show(b),this.openStreetMap(),this.centralineMarker(),this.userMarker()}},list:function(){var a=new ProvinceList({collection:AA.province});AA.app.contentRegion.show(a)},index:function(){var a=new MainView({model:AA.geoHelper});AA.app.contentRegion.show(a)},stations:function(a){var b=new Airdata(AA.airdata.where({provincia:a})),c=new CentralineList({collection:b});AA.app.contentRegion.show(c)},station:function(a){var b=AA.airdata.findWhere({codseqst:a}),c=new CentralinaView({model:b});AA.app.contentRegion.show(c),c.plotOzono(),c.plotPM10();var d=new CentralinaAlertView({el:"#ozono-starred",model:b});d.render()},cop:function(a,b){AA.modalHelper.showLoading();var c=AA.airdata.findWhere({codseqst:a}),d=c.get("copdata");null===d?(d=new CopTable(AA.dataParser.parseCop(AA.dataProvider.getCopData(b),a)),AA.dataParser.on("copReady",this.copReady,this)):this.copReady(d)},copReady:function(a){var b=new CopView({model:a});AA.app.contentRegion.show(b),AA.modalHelper.hideLoading()},settings:function(){var a=new SettingsView({model:AA.settings});AA.app.contentRegion.show(a),$(".btn-group").button()},openStreetMap:function(){AA.mapHelper.setupMap(AA.geoHelper.get("venetoSOlat"),AA.geoHelper.get("venetoSOlon"),AA.geoHelper.get("venetoNElat"),AA.geoHelper.get("venetoNElon")),AA.mapHelper.setView(AA.geoHelper.get("lat"),AA.geoHelper.get("lon"))},centralineMarker:function(){AA.airdata.each(function(a){var b=a.get("lat"),c=a.get("lon"),d=L.marker([b,c]).addTo(AA.map),e=new CentralinaPopupMap({model:a});e.render(),AA.mapHelper.stdMarker(b,c,e.el),d.bindPopup(e.el)})},userMarker:function(){0!==AA.geoHelper.get("isGeoLocalized")&&(_.bindAll(AA.mapHelper,"userMarker"),AA.mapHelper.userMarker(AA.geoHelper.get("lat"),AA.geoHelper.get("lon")))}}),AriaRouter=Backbone.Router.extend({routes:{"":"index",map:"map",list:"list",settings:"settings","stations/:provincia":"stations","station/:number":"station","cop/:provincia/:number":"cop"},map:function(){AA.controller.map()},list:function(){AA.controller.list()},index:function(){AA.controller.index()},settings:function(){AA.controller.settings()},stations:function(a){AA.controller.stations(a)},station:function(a){AA.controller.station(a)},cop:function(a,b){AA.controller.cop(b,a)}}),DataParser=Backbone.Model.extend({parseAll:function(a){AA.airdata=new Airdata,AA.province=new Province,$.ajaxSetup({error:function(){AA.modalHelper.hideLoading(),AA.modalHelper.showError(0)}}),$.getJSON(a.getData(),function(b){$(b.stazioni).each(function(a,b){var c=new Centralina({codseqst:b.codseqst}),d=new Misure,e=new Misure;$(b.misurazioni).each(function(a,b){b.ozono&&($(b.ozono).each(function(a,b){d.add(new O3({date:b.data,sample:parseFloat(b.mis).toFixed(0)}))}),c.set({mis_o3:d}),0!==d.lenght&&c.set("nodata",0)),b.pm10&&($(b.pm10).each(function(a,b){e.add(new PM10({date:b.data,sample:parseFloat(b.mis).toFixed(0)}))}),c.set({mis_pm10:e}),0!==e.lenght&&c.set("nodata",0))}),AA.airdata.add(c)}),$.getJSON(a.getStations(),function(a){$(a.stazioni).each(function(a,b){var c=AA.airdata.findWhere({codseqst:b.codseqst});if(c){c.set({nome:b.nome,localita:b.localita,citta:b.comune,provincia:b.provincia,tipologia:b.tipozona}),c.set("tipologia",c.formatTipologia());var d=AA.province.findWhere({nome:b.provincia});if(!d){var e=new Provincia({nome:b.provincia});AA.province.add(e)}}})}),$.getJSON(a.getCoords(),function(a){$(a.coordinate).each(function(a,b){var c=AA.airdata.findWhere({codseqst:b.codseqst});c&&c.set({lat:b.lat,lon:b.lon})}),AA.dataParser.trigger("coordsReady"),AA.modalHelper.hideLoading()})})},parseCop:function(a,b){$.ajaxSetup({error:function(){AA.modalHelper.hideLoading(),AA.modalHelper.showError(1)}}),$.ajax({type:"GET",url:a,dataType:"xml",success:function(a){var c=$(a).find("row").filter(function(){return $(this).find("CODSEQST").text()==b}),d=AA.airdata.findWhere({codseqst:b}),e=new CopTable({conc_no2:c.find("CONC_NO2").text(),ora_no2:c.find("ORA_NO2").text(),sup_no2:c.find("SUP_NO2").text(),conc_pm10:c.find("CONC_PM10").text(),sup_pm10:c.find("SUP_PM10").text(),conc_o3:c.find("CONC_O3").text(),ora_o3:c.find("ORA_O3").text(),conc_mm_o3:c.find("CONC_MM_O3").text(),sup_mm_o3:c.find("SUP_MM_O3").text(),conc_so2:c.find("CONC_SO2").text(),ora_so2:c.find("ORA_SO2").text(),sup_so2:c.find("SUP_SO2").text(),conc_mm_co:c.find("CONC_MM_CO").text(),sup_mm_co:c.find("SUP_MM_CO").text(),data:c.find("DATA_BOLLETTINO").text(),data_rif:c.find("DATA_RIF").text(),nome:c.find("STATNM").text()});d.set("copdata",e),AA.dataParser.trigger("copReady",e)}})}}),DataProvider=Backbone.Model.extend({getData:function(){return"http://89.96.234.233/aria-json/exported/aria/data.json"},getStations:function(){return"http://89.96.234.233/aria-json/exported/aria/stats.json"},getCoords:function(){return"http://89.96.234.233/aria-json/exported/aria/coords.json"},getCopData:function(a){return"http://89.96.234.233/aria-json/exported/cop/"+a.toLowerCase()+".xml"}});